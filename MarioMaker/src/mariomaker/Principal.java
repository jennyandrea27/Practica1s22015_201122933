/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package mariomaker;

import EDD.*;
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.GridBagLayout;
import java.awt.GridLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.net.URL;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.ScrollPaneConstants;

/**
 *
 * @author jenny
 */
public class Principal extends javax.swing.JFrame {
    String tipo;//tipo de objeto a agregar a la lista
     //lista doblemente enlazada para almacenar objetos
   ListaD listadoble=new ListaD();
   //indica si existe un personaje en la lista
   public boolean personaje=false;
   //indica si existe un castillo en la lista
   public boolean castillo=false;   
   //pantalla para decidir el comportamiento de la lista
   Comportamiento pcomportamiento=new Comportamiento();
   JFrame frame = new JFrame();
   
   MOrtogonal matriz=new MOrtogonal();
   
    /**
     * Creates new form Principal
     */
    public Principal() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        lImagen = new javax.swing.JLabel();
        bVistaPrevia = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        cbObjetos = new javax.swing.JComboBox();
        cbPersonaje = new javax.swing.JComboBox();
        cbCastillo = new javax.swing.JComboBox();
        jLabel6 = new javax.swing.JLabel();
        tbNombre = new javax.swing.JTextField();
        bGuardarObjeto = new javax.swing.JButton();
        bGuardarCastillo = new javax.swing.JButton();
        bGuardarPersonaje = new javax.swing.JButton();
        tbCantidad = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        bSiguiente = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Principal");
        getContentPane().setLayout(null);

        jLabel1.setFont(new java.awt.Font("URW Bookman L", 0, 15)); // NOI18N
        jLabel1.setText("CARGA DE OBJETOS");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(264, 24, 167, 16);

        lImagen.setFont(new java.awt.Font("URW Bookman L", 0, 15)); // NOI18N
        getContentPane().add(lImagen);
        lImagen.setBounds(100, 60, 100, 110);

        bVistaPrevia.setFont(new java.awt.Font("URW Bookman L", 0, 15)); // NOI18N
        bVistaPrevia.setText("Vista Previa");
        bVistaPrevia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bVistaPreviaActionPerformed(evt);
            }
        });
        getContentPane().add(bVistaPrevia);
        bVistaPrevia.setBounds(531, 59, 120, 28);

        jLabel2.setFont(new java.awt.Font("URW Bookman L", 0, 15)); // NOI18N
        jLabel2.setText("Objetos:");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(45, 203, 62, 16);

        jLabel3.setFont(new java.awt.Font("URW Bookman L", 0, 15)); // NOI18N
        jLabel3.setText("Tipo");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(12, 243, 33, 16);

        jLabel4.setFont(new java.awt.Font("URW Bookman L", 0, 15)); // NOI18N
        jLabel4.setText("Castillo:");
        getContentPane().add(jLabel4);
        jLabel4.setBounds(264, 203, 63, 16);

        jLabel5.setFont(new java.awt.Font("URW Bookman L", 0, 15)); // NOI18N
        jLabel5.setText("Personaje:");
        getContentPane().add(jLabel5);
        jLabel5.setBounds(453, 203, 76, 16);

        cbObjetos.setFont(new java.awt.Font("URW Bookman L", 0, 15)); // NOI18N
        cbObjetos.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Suelo", "Pared", "Goomba", "Koopa", "Moneda", "Hongo" }));
        cbObjetos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbObjetosActionPerformed(evt);
            }
        });
        getContentPane().add(cbObjetos);
        cbObjetos.setBounds(82, 238, 100, 26);

        cbPersonaje.setFont(new java.awt.Font("URW Bookman L", 0, 15)); // NOI18N
        cbPersonaje.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Mario" }));
        cbPersonaje.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbPersonajeActionPerformed(evt);
            }
        });
        getContentPane().add(cbPersonaje);
        cbPersonaje.setBounds(474, 238, 79, 26);

        cbCastillo.setFont(new java.awt.Font("URW Bookman L", 0, 15)); // NOI18N
        cbCastillo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Castillo1" }));
        cbCastillo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbCastilloActionPerformed(evt);
            }
        });
        getContentPane().add(cbCastillo);
        cbCastillo.setBounds(264, 238, 103, 26);

        jLabel6.setFont(new java.awt.Font("URW Bookman L", 0, 15)); // NOI18N
        jLabel6.setText("Nombre:");
        getContentPane().add(jLabel6);
        jLabel6.setBounds(160, 330, 65, 16);

        tbNombre.setFont(new java.awt.Font("URW Bookman L", 0, 15)); // NOI18N
        tbNombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tbNombreActionPerformed(evt);
            }
        });
        getContentPane().add(tbNombre);
        tbNombre.setBounds(260, 320, 111, 26);

        bGuardarObjeto.setFont(new java.awt.Font("URW Bookman L", 0, 15)); // NOI18N
        bGuardarObjeto.setText("GUARDAR");
        bGuardarObjeto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bGuardarObjetoActionPerformed(evt);
            }
        });
        getContentPane().add(bGuardarObjeto);
        bGuardarObjeto.setBounds(50, 360, 100, 28);

        bGuardarCastillo.setFont(new java.awt.Font("URW Bookman L", 0, 15)); // NOI18N
        bGuardarCastillo.setText("GUARDAR");
        bGuardarCastillo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bGuardarCastilloActionPerformed(evt);
            }
        });
        getContentPane().add(bGuardarCastillo);
        bGuardarCastillo.setBounds(270, 360, 100, 28);

        bGuardarPersonaje.setFont(new java.awt.Font("URW Bookman L", 0, 15)); // NOI18N
        bGuardarPersonaje.setText("GUARDAR");
        bGuardarPersonaje.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bGuardarPersonajeActionPerformed(evt);
            }
        });
        getContentPane().add(bGuardarPersonaje);
        bGuardarPersonaje.setBounds(480, 360, 110, 28);

        tbCantidad.setFont(new java.awt.Font("URW Bookman L", 0, 15)); // NOI18N
        tbCantidad.setText("1");
        getContentPane().add(tbCantidad);
        tbCantidad.setBounds(260, 290, 110, 26);

        jLabel7.setFont(new java.awt.Font("URW Bookman L", 0, 15)); // NOI18N
        jLabel7.setText("Cantidad:");
        getContentPane().add(jLabel7);
        jLabel7.setBounds(160, 300, 80, 16);

        bSiguiente.setFont(new java.awt.Font("URW Bookman L", 1, 16)); // NOI18N
        bSiguiente.setText("SIGUIENTE");
        bSiguiente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bSiguienteActionPerformed(evt);
            }
        });
        getContentPane().add(bSiguiente);
        bSiguiente.setBounds(550, 430, 130, 29);

        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/fondo_1.jpg"))); // NOI18N
        getContentPane().add(jLabel8);
        jLabel8.setBounds(-510, -200, 1210, 850);

        setSize(new java.awt.Dimension(697, 503));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void tbNombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tbNombreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tbNombreActionPerformed

    private void cbObjetosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbObjetosActionPerformed
        // TODO add your handling code here:
        //combobox para elegir objetos a agregar, agrega la imagen seleccionada como vista previa
        //variable global tipo es modificada segun sea el caso
        URL direccion=null;
        ImageIcon imagen=null;
        switch(cbObjetos.getSelectedIndex()){
            case 0:
                direccion=getClass().getResource("/Imagenes/suelo.png");
                imagen=new ImageIcon(direccion);
                lImagen.setIcon(imagen);
                tipo="suelo";
                break;
            case 1:
                direccion=getClass().getResource("/Imagenes/pared.png");
                imagen=new ImageIcon(direccion);
                lImagen.setIcon(imagen);
                tipo="pared";
                break;
            case 2:
                direccion=getClass().getResource("/Imagenes/goombav.png");
                imagen=new ImageIcon(direccion);
                lImagen.setIcon(imagen);
                tipo="goomba";
                break;
            case 3:
                direccion=getClass().getResource("/Imagenes/koopav.png");
                imagen=new ImageIcon(direccion);
                lImagen.setIcon(imagen);
                tipo="koopa";
                break;
            case 4:
                direccion=getClass().getResource("/Imagenes/moneda.png");
                imagen=new ImageIcon(direccion);
                lImagen.setIcon(imagen);
                tipo="moneda";
                break;
            case 5:
                direccion=getClass().getResource("/Imagenes/hongo.png");
                imagen=new ImageIcon(direccion);
                lImagen.setIcon(imagen);
                tipo="hongo";
                break;
            default:                    
        }
    }//GEN-LAST:event_cbObjetosActionPerformed

    private void cbPersonajeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbPersonajeActionPerformed
        // TODO add your handling code here:
        URL direccion=null;
        ImageIcon imagen=null;
        switch(cbPersonaje.getSelectedIndex()){
            case 0:
                direccion=getClass().getResource("/Imagenes/mariov.png");
                imagen=new ImageIcon(direccion);
                lImagen.setIcon(imagen);
                tipo="pprincipal";
                break;           
            default:
        }
    }//GEN-LAST:event_cbPersonajeActionPerformed

    private void cbCastilloActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbCastilloActionPerformed
        // TODO add your handling code here:
        URL direccion=null;
        ImageIcon imagen=null;
        switch(cbCastillo.getSelectedIndex()){
            case 0:
                direccion=getClass().getResource("/Imagenes/castillo1.png");
                imagen=new ImageIcon(direccion);
                lImagen.setIcon(imagen);
                tipo="castillo";
                break;      
            default:
        }
    }//GEN-LAST:event_cbCastilloActionPerformed

    private void bGuardarObjetoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bGuardarObjetoActionPerformed
        // TODO add your handling code here:
        for(int i=1;i<=Integer.parseInt(tbCantidad.getText());i++){
            Objeto objeto=new Objeto(tbNombre.getText(),tipo);
            listadoble.InsertarFinal(objeto);          
        }
        tbNombre.setText("");
        tbCantidad.setText("1");
    }//GEN-LAST:event_bGuardarObjetoActionPerformed

    private void bVistaPreviaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bVistaPreviaActionPerformed
        // TODO add your handling code here:
        Nodo temp=listadoble.pinicio;
        while(temp!=null){
            try{
                Personaje p=(Personaje)temp.dato;
                p.Imprimir();
            }catch(Exception e){
                try{
                    Objeto o=(Objeto)temp.dato;
                    o.Imprimir();
                }catch(Exception er){
                    
                }
            }
        temp=temp.siguiente;
        }        
        if(!listadoble.Vacia()){
            GraficarLista();        
        }else{
            JOptionPane.showMessageDialog(null, "No se han agregado nodos");
        }
        
    
    }//GEN-LAST:event_bVistaPreviaActionPerformed

    //metodo para graficar los nodos de la lista en el panel de vista previa
    //se agrega en la ventana VistaLista
    private void GraficarLista(){
        
        int cantidad=listadoble.getCantidad();//cantidad de nodos en la lista
        int pos=0;//posicion del objeto en la lista
        
        JPanel panel = new JPanel()
        {
            @Override
            public Dimension getPreferredSize() {
                return new Dimension(60, (cantidad+2)*50);
            }
        };                
        JScrollPane jsp=new JScrollPane(panel,JScrollPane.VERTICAL_SCROLLBAR_AS_NEEDED,JScrollPane.HORIZONTAL_SCROLLBAR_ALWAYS);
        jsp.setBounds(250, 10, 500,160);
        frame.add(jsp);
        URL direccion=null;
        ImageIcon imagen=null;                
        
        frame.setDefaultCloseOperation(HIDE_ON_CLOSE);                       
             
        
        System.out.println("cantidad "+cantidad);        
        Nodo temp=listadoble.pinicio;
        JButton boton;
        int x=10;
        int y=10;
        
        //panel para visualizar atributos de nodos agregados a la lista
        JPanel panel2=new JPanel();
        panel2.setLayout(null);
        panel2.setOpaque(false);
        panel2.setBounds(250, 200, 500, 300);        
        frame.add(panel2);
        //etiquetas para atributos
        JLabel etiqueta=new JLabel("Nombre: ");
        etiqueta.setBounds(30, 20, 70, 35);
        panel2.add(etiqueta);
        etiqueta=new JLabel("Tipo: ");
        etiqueta.setBounds(30,60,80,25);
        panel2.add(etiqueta);
        etiqueta = new JLabel();
        etiqueta.setBounds(200, 10, 50, 50);
        panel2.add(etiqueta);
        JLabel numboton=new JLabel("");
        numboton.setBounds(0, 0, 50, 50);
        //numboton.setVisible(false);
        panel2.add(numboton);
        //campos de texto
        JTextField tbnombre=new JTextField();
        tbnombre.setBounds(110, 30, 80, 25);        
        tbnombre.setName("tbNombre");
        panel2.add(tbnombre);
        JTextField tbtipo=new JTextField();
        tbtipo.setBounds(110, 60, 80, 25);        
        tbtipo.setName("tbTipo");
        tbtipo.setEnabled(false);
        panel2.add(tbtipo);
        //botones para modificar o eliminar nodos
        JButton bmodificar=new JButton("MODIFICAR");
        bmodificar.setBounds(40, 120, 110, 30);
        Modificar(bmodificar, numboton, tbnombre, tbtipo);
        panel2.add(bmodificar);
        JButton beliminar=new JButton("ELIMINAR");
        beliminar.setBounds(40, 160, 110, 30);
        Eliminar(beliminar, numboton);
        panel2.add(beliminar);                
        
        while(temp!=null){
            try{
                Personaje p=(Personaje)temp.dato;
                direccion=getClass().getResource("/Imagenes/mariov.png");
                imagen=new ImageIcon(direccion);
                boton=new JButton(imagen);
            }catch(Exception e){
                try{
                    Objeto o=(Objeto)temp.dato;
                    switch(o.getTipo()){
                        case 1:
                        direccion=getClass().getResource("/Imagenes/suelo.png");
                        imagen=new ImageIcon(direccion);    
                        boton=new JButton(imagen);
                        break;
                        case 2:
                        direccion=getClass().getResource("/Imagenes/pared.png");
                        imagen=new ImageIcon(direccion);   
                        boton=new JButton(imagen);
                        break;
                        case 3:
                        direccion=getClass().getResource("/Imagenes/goombav.png");
                        imagen=new ImageIcon(direccion); 
                        boton=new JButton(imagen);
                        break;
                        case 4:
                        direccion=getClass().getResource("/Imagenes/koopav.png");
                        imagen=new ImageIcon(direccion);    
                        boton=new JButton(imagen);
                        break;
                        case 5:
                        direccion=getClass().getResource("/Imagenes/moneda.png");
                        imagen=new ImageIcon(direccion);   
                        boton=new JButton(imagen);
                        break;
                        case 6:
                        direccion=getClass().getResource("/Imagenes/hongo.png");
                        imagen=new ImageIcon(direccion);   
                        boton=new JButton(imagen);
                        break;
                        case 7:
                        direccion=getClass().getResource("/Imagenes/castillo1.png");
                        imagen=new ImageIcon(direccion);   
                        boton=new JButton(imagen);
                        break;
                        default:
                    }
                }catch(Exception er){
                    
                }                
            }
        boton=new JButton(imagen);
        boton.setBounds(x, y, 50, 50);
        boton.setName(""+pos);
        //agregar metodo al boton con los campos de texto de parametros
        AgregarMetodo(boton, tbnombre, tbtipo,numboton);
        panel.add(boton);
        pos++;        
        x+=50;
        
        temp=temp.siguiente;
        }      
        
        //fondo frame
        frame.setLayout(null);
        direccion=getClass().getResource("/Imagenes/fondo_1.jpg");
        imagen=new ImageIcon(direccion);
        JLabel fondo=new JLabel(imagen);
        fondo.setBounds(0, 0, 1000, 600);
        frame.add(fondo);
        
        panel.setBackground(new Color(199,215,250));
        
        frame.setLayout(null);
        frame.setSize(1000, 600);
        frame.setLocationRelativeTo(null);
        frame.setVisible(true);
        
    }
    private void AgregarMetodo(JButton boton,JTextField tbnombre,JTextField tbtipo,JLabel numboton){
        boton.addActionListener(new ActionListener() {
            
            public void actionPerformed(ActionEvent e)
            {
                //metodo para agregar a los botones de la vista previa
                System.out.println("Nombre boton "+boton.getName());
                numboton.setText(boton.getName());
                Nodo temp=listadoble.BuscarElemento(Integer.parseInt(boton.getName()));
                try{
                    Personaje p=(Personaje)temp.dato;
                    tbnombre.setText(p.nombre);
                    tbtipo.setText(p.tipo);
                }catch(Exception er){
                    try{
                        Objeto o=(Objeto)temp.dato;
                        tbnombre.setText(o.nombre);
                        tbtipo.setText(o.tipo);
                    }catch(Exception ex){
                        
                    }
                }
                
            }
        }); 
    }
    //metodo Modificar agrega evento al boton creado durante la grafica de la listadoble
    //JLabel contiene el numero de boton seleccionado, no se muestra al usuario
    private void Modificar(JButton boton,JLabel numboton,JTextField tbnombre,JTextField tbtipo){
        boton.addActionListener(new ActionListener() {
            
            public void actionPerformed(ActionEvent e)
            {
                //metodo para agregar a los botones de la vista previa                
                //numero de boton para la posicion en la lista
                int num=Integer.parseInt(numboton.getText());
                
                Nodo temp=listadoble.BuscarElemento(num);
                
                try{
                    //verifica si el nodo a modificar es un personaje
                    Personaje p=(Personaje)temp.dato;
                    Personaje p2=new Personaje(tbnombre.getText());                                        
                    listadoble.Reemplazar(num, p2);
                }catch(Exception er){
                    try{
                        //verifica si el nodo a modoficar es un Objeto
                        Objeto o=(Objeto)temp.dato;
                        Objeto o2=new Objeto(tbnombre.getText(), tbtipo.getText());
                        listadoble.Reemplazar(num, o2);
                    }catch(Exception ex){
                        
                    }
                }
                
            }
        }); 
    }
    
    private void Eliminar(JButton boton,JLabel numboton){
        boton.addActionListener(new ActionListener() {
            
            public void actionPerformed(ActionEvent e)
            {
                //metodo para agregar a los botones de la vista previa                
                //numero de boton para la posicion en la lista
                int num=Integer.parseInt(numboton.getText());                                
                listadoble.Eliminar(num);    
                //refrescar panel en donde se visualiza la listadoble
                frame.setVisible(false);
                frame=new JFrame();
                GraficarLista();
            }
        }); 
    }
    
    private void bGuardarCastilloActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bGuardarCastilloActionPerformed
        // TODO add your handling code here:        
        if(!CastilloAgregado()){
            if(tbCantidad.getText().equals("1")){
                Objeto objeto=new Objeto(tbNombre.getText(),tipo);
                listadoble.InsertarFinal(objeto);
                castillo=true;
                tbNombre.setText("");
                tbCantidad.setText("1");
            }else{
                JOptionPane.showMessageDialog(null, "Solamente se puede agregar un castillo");
                tbNombre.setText("");
                tbCantidad.setText("1");
            }
            
        }else{
            JOptionPane.showMessageDialog(null, "Castillo ya esta agregado a la lista");
            tbNombre.setText("");
        }
    }//GEN-LAST:event_bGuardarCastilloActionPerformed

    private void bGuardarPersonajeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bGuardarPersonajeActionPerformed
        // TODO add your handling code here:
        if(!PersonajeAgregado()){
            if(tbCantidad.getText().equals("1")){
                Personaje p=new Personaje(tbNombre.getText());
                listadoble.InsertarFinal(p);
                personaje=true;
                tbNombre.setText("");                     
            }else{
                JOptionPane.showMessageDialog(null, "Solamente se puede agregar un personaje principal");
                tbNombre.setText("");
                tbCantidad.setText("1");
            }
            
        }else{
            JOptionPane.showMessageDialog(null, "Personaje ya esta agregado a la lista");
            tbNombre.setText("");
        }
    }//GEN-LAST:event_bGuardarPersonajeActionPerformed

    private void bSiguienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bSiguienteActionPerformed
        // TODO add your handling code here:
        pcomportamiento.setVisible(true);        
        matriz.Recorrer();
    }//GEN-LAST:event_bSiguienteActionPerformed

    //metodo para verificar si existe personaje
    public boolean PersonajeAgregado(){
        return personaje;
    }
    //metodo para verificar si existe castillo
    public boolean CastilloAgregado(){
        return castillo;
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Principal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bGuardarCastillo;
    private javax.swing.JButton bGuardarObjeto;
    private javax.swing.JButton bGuardarPersonaje;
    private javax.swing.JButton bSiguiente;
    private javax.swing.JButton bVistaPrevia;
    private javax.swing.JComboBox cbCastillo;
    private javax.swing.JComboBox cbObjetos;
    private javax.swing.JComboBox cbPersonaje;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel lImagen;
    private javax.swing.JTextField tbCantidad;
    private javax.swing.JTextField tbNombre;
    // End of variables declaration//GEN-END:variables
}
